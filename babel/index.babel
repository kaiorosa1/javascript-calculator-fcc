class App extends React.Component {
  render() {
    return (
      <div>
        <h1>JavaScript Calculator</h1>
        <Calculator />
      </div>
    );
  }
}

class Calculator extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      text: " ",
      preValue: 0,
      operator: "",
      result:0
    };
    this.changeDisplay = this.changeDisplay.bind(this);
    this.setPreValue = this.setPreValue.bind(this);
    this.setOperator = this.setOperator.bind(this);
    this.setResult = this.setResult.bind(this);
  }

  changeDisplay(newText) {
    this.setState({
      text: newText
    });
  }

  setPreValue(val) {
    this.setState({
      preValue: val
    });
  }

  setOperator(op) {
    this.setState({
      operator: op
    });
  }
  
  setResult(newResult) {
    this.setState({
      result: newResult
    });
  }
  

  render() {
    return (
      <div id="calculator">
        <Display text={this.state.text} />
        <CalculatorPad
          text={this.state.text}
          changeDisplay={this.changeDisplay}
          setPreValue={this.setPreValue}
          setOperator={this.setOperator}
          setResult = {this.setResult}
          getValue={this.state.preValue}
          getOperator={this.state.operator}
          getStateResult = {this.state.result}
        />
      </div>
    );
  }
}

class Display extends React.Component {
  constructor(props) {
    super(props);
  }
  render() {
    return (
      <div>
        <h2 id="display">{this.props.text}</h2>
      </div>
    );
  }
}

class CalculatorPad extends React.Component {
  constructor(props) {
    super(props);
    this.sendToDisplay = this.sendToDisplay.bind(this);
    this.clearDisplay = this.clearDisplay.bind(this);
    this.setOperation = this.setOperation.bind(this);
    this.getResult = this.getResult.bind(this);
  }
  
  sendToDisplay(e) {
    const displayText = this.props.text;
    const dataValue = document
      .getElementById(e.target.id)
      .getAttribute("data-value");
    let displayedData;

    if (displayText !== "0") {
      displayedData = displayText.concat(dataValue);
    } else {
      displayedData = "".concat(dataValue);
    }
    this.props.changeDisplay(displayedData);
    if(Number(displayedData)){
      // alert(Number(displayedData));
      this.props.setResult(Number(displayedData));
    }
  }
  
  clearDisplay() {
    this.props.setPreValue(0);
    this.props.setOperator("");
    this.props.setResult(0);
    this.props.changeDisplay("0");
  }

  setOperation(e) {
    this.props.setPreValue(Number(this.props.text));
    this.props.setOperator(e.target.id);
    
    let result =  this.props.getStateResult;
    // Verify operation
    
    switch (e.target.id) {
      case "add":
        result += this.props.getValue;
        break;
      case "subtract":
        result -= this.props.getValue;
        break;
      case "divide":
        result /=this.props.getValue;
        break;
      case "multiply":
        result *= this.props.getValue;
        break;
    }
    
    this.props.setResult(result);
    this.props.changeDisplay(" ");
  }

  getResult() {
    this.props.setPreValue(Number(this.props.text));
    let result =  this.props.getStateResult;
    // Verify operation
    switch (this.props.getOperator) {
      case "add":
        result += this.props.getValue;
        break;
      case "subtract":
        result -= this.props.getValue;
        break;
      case "divide":
        result /= this.props.getValue;
        break;
      case "multiply":
        result *= this.props.getValue;
        break;
      default:
        
    }
    
    this.props.setResult(result);
    // alert(result);
    this.props.changeDisplay(result);
  }
  
  render() {
    return (
      <div id="pad">
        <div id="numbers">
          <div id="zero" onClick={this.sendToDisplay} data-value="0">
            0
          </div>
          <div id="one" onClick={this.sendToDisplay} data-value="1">
            1
          </div>
          <div id="two" onClick={this.sendToDisplay} data-value="2">
            2
          </div>
          <div id="three" onClick={this.sendToDisplay} data-value="3">
            3
          </div>
          <div id="four" onClick={this.sendToDisplay} data-value="4">
            4
          </div>
          <div id="five" onClick={this.sendToDisplay} data-value="5">
            5
          </div>
          <div id="six" onClick={this.sendToDisplay} data-value="6">
            6
          </div>
          <div id="seven" onClick={this.sendToDisplay} data-value="7">
            7
          </div>
          <div id="eight" onClick={this.sendToDisplay} data-value="8">
            8
          </div>
          <div id="nine" onClick={this.sendToDisplay} data-value="9">
            9
          </div>
        </div>
        <div id="functionality">
          <div id="decimal" onClick={this.sendToDisplay} data-value=".">.</div>
          <div id="clear" onClick={this.clearDisplay}>
            AC
          </div>
          <div id="multiply" onClick={this.setOperation} data-value=".">
            X
          </div>
          <div id="divide" onClick={this.setOperation} data-value="/">
            /
          </div>
          <div id="add" onClick={this.setOperation} data-value="+">
            +
          </div>
          <div id="subtract" onClick={this.setOperation} data-value="-">
            -
          </div>
          <div>Ans</div>
          <div id="equals" onClick={this.getResult} data-value="=">
            =
          </div>
        </div>
      </div>
    );
  }
  
}

ReactDOM.render(<App />, document.getElementById("app"));
